{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","valorInput","setValorInput","onSubmit","e","preventDefault","trim","length","console","log","categorias","type","value","onChange","target","placeholder","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAuB5C,OACI,0BACIC,SAjBa,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,QAAU,EAC3BC,QAAQC,IAAI,iCAKZV,GAAc,SAACW,GAAD,OAAiBT,GAAjB,mBAAgCS,OAC9CR,EAAc,OASd,2BACIS,KAAO,OACPC,MAASX,EACTY,SA1Bc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,QA0BfG,YAAc,+B,uBClCjBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,8DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,uBAAGI,UAAU,aAAaJ,KCFzBO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECDZ,SAACA,GAAe,IAAD,EACbjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAkBvC,OAZAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAChB,GACHc,EAAS,CACLf,KAAMC,EACNY,SAAS,SAIvB,CAACpB,IAEIqB,EDLiBI,GAAjBlB,EAZ6B,EAY7BA,KAAMa,EAZuB,EAYvBA,QAEb,OACI,kBAAC,WAAD,KACI,4BAAKpB,GACJoB,GAAW,uBAAGJ,UAAU,oCAAb,eACZ,yBAAKA,UAAU,aAEPT,EAAKE,KAAI,SAACC,GACN,OACI,kBAAC,EAAD,eACIgB,IAAKhB,EAAIC,IACLD,UExBvBiB,EAAe,WAAM,MAGM5C,mBAAS,CAAC,WAHhB,mBAGvBU,EAHuB,KAGXX,EAHW,KAY9B,OACI,kBAAC,WAAD,KACI,4CACA,kBAAC,EAAD,CACIA,cAAiBA,IAGrB,6BAKIW,EAAWgB,KAAI,SAACT,GACZ,OACI,kBAAC,EAAD,CACI0B,IAAO1B,EACPA,UAAaA,S,MC3BzC4B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.693d974d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    \r\n    const [valorInput, setValorInput] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setValorInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(valorInput.trim().length <= 0) {\r\n            console.log('Debes agregar algún valor');\r\n            return;\r\n        } else {\r\n            //De esta forma tenemos un callback, en donde traemos la referencia \r\n            //de los valores que trae la función por parámetro\r\n            setCategorias((categorias) => [valorInput, ...categorias]);\r\n            setValorInput('');\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit = {handleSubmit}\r\n        >\r\n            <input \r\n                type = 'text'\r\n                value = {valorInput}\r\n                onChange = {handleInputChange}\r\n                placeholder = 'Agrega un nuevo héroe'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}","export const getGifs = async(categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=5&api_key=x2IvOTq70ETQiGEiZYzJKYZdh59XbeTh`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(gif => {\r\n        return ({\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        });\r\n    });\r\n\r\n    return (gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p className='card-text'>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    // const [gifs, setGifs] = useState(['']);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(categoria)\r\n    //         .then((gifs) => {setGifs(gifs)})\r\n    // }, [categoria]);\r\n    \r\n    \r\n    // getGifs();\r\n    \r\n    const {data, loading} = useFetchGifs();\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3>{categoria}</h3>\r\n            {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    data.map((gif) => {\r\n                        return (\r\n                            <GifGridItem \r\n                                key={gif.id} \r\n                                {...gif} \r\n                            ></GifGridItem>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(categoria)\r\n            .then((gifs) => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    },[categoria]);\r\n\r\n    return state;\r\n}","import React, {Fragment, useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    // const categorias = ['Super man', 'Batman', 'Green Lantern'];\r\n\r\n    const [categorias, setCategorias] = useState(['Random']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategorias([\r\n    //         ...categorias,\r\n    //         'Flash'\r\n    //     ]);\r\n    // }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory\r\n                setCategorias = {setCategorias}\r\n                // categorias = {categorias}\r\n            ></AddCategory>\r\n            <hr/>\r\n            {/* <button\r\n                onClick={handleAdd}\r\n            >Agregar nuevo</button> */}\r\n            {\r\n                categorias.map((categoria) => {\r\n                    return (\r\n                        <GifGrid\r\n                            key = {categoria} \r\n                            categoria = {categoria}\r\n                        ></GifGrid>\r\n                    )\r\n                })\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp></GifExpertApp>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}